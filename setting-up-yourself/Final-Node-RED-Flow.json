[{"id":"854e52d5.43a11","type":"tab","label":"Final Flow","disabled":false,"info":""},{"id":"b0df92d.f93d17","type":"http in","z":"854e52d5.43a11","name":"Request","url":"/api/message","method":"post","upload":false,"swaggerDoc":"","x":108.33333969116211,"y":327.3333444595337,"wires":[["1364c761.607c99"]]},{"id":"7837925f.cbefec","type":"watson-conversation-v1","z":"854e52d5.43a11","name":"Watson Conversation API","workspaceid":"bd54312e-20d8-4c0c-8869-aefda815e3f9","multiuser":false,"context":false,"empty-payload":false,"default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/conversation/api","x":663.0794067382812,"y":327.14270401000977,"wires":[["910b26e1.d1d138","c237b6b5.07d898"]]},{"id":"c237b6b5.07d898","type":"switch","z":"854e52d5.43a11","name":"What action?","property":"payload.output.nodes_visited[0]","propertyType":"msg","rules":[{"t":"eq","v":"node_7_1507329128257","vt":"str"},{"t":"eq","v":"node_1_1507320594180","vt":"str"},{"t":"eq","v":"node_4_1508179653724","vt":"str"},{"t":"else"}],"checkall":"false","outputs":4,"x":901.6666488647461,"y":328.33334732055664,"wires":[["37ce783f.d38348","17c428c2.989d17"],["b7260420.0ac6f8"],["d7826173.722fa","318b87f9.c80da8"],["d7826173.722fa"]]},{"id":"1364c761.607c99","type":"function","z":"854e52d5.43a11","name":"Prep Input Message","func":"//x = msg.payload.workspace_id\n\nx = msg.payload.input;\n\nvar y;\n\n//Single space starts conversation over\nif (x == \"/new\"){\n    x = \" \";\n    y = null;\n    global.set(\"convo_context\", null);\n    global.set(\"customer_record\", null);\n    global.set(\"sign_up_reason\", null);\n    global.set(\"fitness_class_rec\", null);\n    \n} else {\n    y = global.get(\"convo_context\") || null;\n}\n\nmsg.payload = x;\n\nmsg.params = {};\n\nmsg.params.context = y;\n\nreturn msg;","outputs":1,"noerr":0,"x":246.5873260498047,"y":462.0157051086426,"wires":[["7837925f.cbefec"]]},{"id":"1231c579.c4ed9b","type":"function","z":"854e52d5.43a11","name":"Parse SparkML Output","func":"x = {};\n\nfor (i = 0; i < msg.payload.fields.length; i++){\n    x[msg.payload.fields[i]] = msg.payload.values[0][i]; \n}\n\nmsg.payload = x;\n\nreturn msg;","outputs":1,"noerr":0,"x":1936.6667098999023,"y":223.33331823349,"wires":[["352739e2.fad886"]]},{"id":"1df9bc3e.4affd4","type":"http request","z":"854e52d5.43a11","name":"WML - SparkML","method":"POST","ret":"obj","url":"https://ibm-watson-ml.mybluemix.net/v3/wml_instances/d55b0add-6e54-45d1-9fca-eaea5f2cc043/published_models/a6ceb8c1-57d1-4035-8fa0-e4dba0c63fcb/deployments/15204567-3a70-41b7-8a1c-4f5fd1462360/online","tls":"","x":2026.1906051635742,"y":166.33326625823975,"wires":[["1231c579.c4ed9b"]]},{"id":"36688c1c.588b14","type":"http request","z":"854e52d5.43a11","name":"WML - Get Auth Key - SparkML","method":"GET","ret":"obj","url":"https://ibm-watson-ml.mybluemix.net/v3/identity/token","tls":"","x":1507.0476837158203,"y":102.23807430267334,"wires":[["54175752.01d398"]]},{"id":"37ce783f.d38348","type":"function","z":"854e52d5.43a11","name":"Set Headers for Authorization - SparkML","func":"msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\n\n//Must Base 64 encrypt your username and password\n\nreturn msg;","outputs":1,"noerr":0,"x":1137.2379913330078,"y":112.23804664611816,"wires":[["36688c1c.588b14"]]},{"id":"f1141fe7.3d434","type":"http response","z":"854e52d5.43a11","name":"Response","statusCode":"200","headers":{},"x":2266.6667098999023,"y":303.33331823349,"wires":[]},{"id":"17c428c2.989d17","type":"function","z":"854e52d5.43a11","name":"Keep Watson Conversation Information","func":"msg.topic = \"conversation\"\n\nreturn msg;","outputs":1,"noerr":0,"x":1413.3336181640625,"y":197.28579139709473,"wires":[["352739e2.fad886"]]},{"id":"352739e2.fad886","type":"function","z":"854e52d5.43a11","name":"Combine ML Output with Conversation Response","func":"context.ml_output = context.ml_output || false;\ncontext.convo_response = context.convo_response || false;\n\n//Conversation Input\nif (msg.topic == \"conversation\"){\n    context.convo_response = msg.payload;\n} \n//ML Input\nelse{\n    context.ml_output = msg.payload;\n}\n\n//Both inputs have arrived\nif (context.ml_output && context.convo_response){\n\n    msg.payload = { \"convo\": context.convo_response,\n                    \"ml_output\": context.ml_output };\n    \n    //Keep the Fitness Class recommendation to send in text message\n    global.set(\"fitness_class_rec\", context.ml_output.nodeADP_class);\n    \n    //Clear for the next time through.    \n    context.ml_output = null;\n    context.convo_response = null;\n    \n} \n//Only one input has arrived. Do not pass along a message yet\nelse {\n    return null;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1976.6667098999023,"y":303.33331823349,"wires":[["f1141fe7.3d434"]]},{"id":"d7826173.722fa","type":"function","z":"854e52d5.43a11","name":"Prepare Response for Output With No ML","func":"//If there a fitness goal, save it as a global variable\nif (msg.payload.entities && msg.payload.entities[0] && msg.payload.entities[0].entity == \"goal\"){\n    sign_up_reason = msg.payload.entities[0].value;\n\n    global.set(\"sign_up_reason\", sign_up_reason);\n\n    //Update the conversation context with the sign up reason\n    convo_context = global.get(\"convo_context\");\n    convo_context.sign_up_reason = sign_up_reason;\n    global.set(\"convo_context\", convo_context);\n}\n\n\nmsg.payload = { \"convo\": msg.payload,\n                \"ml_output\": false}\n                \nreturn msg;","outputs":1,"noerr":0,"x":1266.666748046875,"y":564.3333129882812,"wires":[["dfe6ee78.7a764"]]},{"id":"dfe6ee78.7a764","type":"http response","z":"854e52d5.43a11","name":"Response","statusCode":"200","headers":{},"x":1546.666748046875,"y":563.3333129882812,"wires":[]},{"id":"910b26e1.d1d138","type":"function","z":"854e52d5.43a11","name":"Save Conversation Context","func":"global.set(\"convo_context\", msg.payload.context);","outputs":1,"noerr":0,"x":782.1429443359375,"y":469.66665267944336,"wires":[[]]},{"id":"1c9684d6.de473b","type":"cloudant in","z":"854e52d5.43a11","name":"Get Customer Info from DB","cloudant":"","database":"customer_info","service":"Watson-Conversation-ML-Demo-cloudantNoSQLDB","search":"_id_","design":"","index":"","x":1386.6667098999023,"y":343.33331823349,"wires":[["71142773.dd6438"]]},{"id":"b7260420.0ac6f8","type":"function","z":"854e52d5.43a11","name":"Parse Customer ID","func":"function formatPhoneNumber(s) {\n  var s2 = (\"\"+s).replace(/\\D/g, '');\n  var m = s2.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  return (!m) ? null : \"\" + m[1] + \"\" + m[2] + \"\" + m[3];\n}\n\nif (msg.payload.entities[0].entity == \"phonenumber\"){\n    msg.payload = formatPhoneNumber(msg.payload.input.text);\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1136.6667098999023,"y":343.33331823349,"wires":[["1c9684d6.de473b"]]},{"id":"71142773.dd6438","type":"function","z":"854e52d5.43a11","name":"Save Customer Record","func":"//Save customer record to be used by predictive model\n//Remove cloudant-specific fields\ndelete msg.payload._id;\ndelete msg.payload._rev;\n\ncustomer_name = msg.payload.NAME;\n\nglobal.set(\"customer_record\", msg.payload);\n\n//Update the conversation context with the customer info\nconvo_context = global.get(\"convo_context\");\n\nconvo_context.customer_record = msg.payload;\n\nglobal.set(\"convo_context\", convo_context);\n\nmsg.payload = {};\n\nmsg.payload.input = customer_name;\n\nreturn msg;","outputs":1,"noerr":0,"x":730.0000534057617,"y":636.6666321754456,"wires":[["1364c761.607c99"]]},{"id":"54175752.01d398","type":"function","z":"854e52d5.43a11","name":"Set Body and Headers for Score","func":"customer_record = global.get(\"customer_record\");\nsign_up_reason = global.get(\"sign_up_reason\");\n    \nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Authorization'] = 'Bearer ' + msg.payload.token;\n\n//Customer Record\nfields = Object.keys(customer_record);\n\n//Customer record global may sometime have an \"input\" field. We don't want that.\n//if (fields.includes(\"input\")){\n//    fields = fields.filter(e => e !== \"input\");\n//}\n\nvalues = [];\nfor (var k = 0; k < fields.length; k++){\n    values.push(customer_record[fields[k]]);\n}\n\n//Sign Up Reason\nfields.push(\"SIGN_UP_REASON\");\nvalues.push(sign_up_reason);\n\nmsg.payload = {\n    \"fields\": fields,\n    \"values\": [values]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1853.0953216552734,"y":104.9046630859375,"wires":[["1df9bc3e.4affd4"]]},{"id":"7c527773.d3fe68","type":"watson-tone-analyzer-v3","z":"854e52d5.43a11","name":"Watson Tone Analyzer API","tones":"emotion","sentences":"false","contentType":"false","tone-method":"generalTone","interface-version":"2016-05-19","inputlang":"en","default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/tone-analyzer/api","x":349.8333740234375,"y":323.1666622161865,"wires":[["11ec0fb6.e839e"]]},{"id":"11ec0fb6.e839e","type":"switch","z":"854e52d5.43a11","name":"Customer Angry?","property":"response.document_tone.tone_categories[0].tones[0].score","propertyType":"msg","rules":[{"t":"gt","v":".6","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":446.1666946411133,"y":252.00000381469727,"wires":[["9f7ed0e1.76383"],[]]},{"id":"14fcb9b4.b49566","type":"http response","z":"854e52d5.43a11","name":"Response","statusCode":"","headers":{},"x":811.6665744781494,"y":189.99999713897705,"wires":[]},{"id":"9f7ed0e1.76383","type":"function","z":"854e52d5.43a11","name":"Deal With Angry Customer","func":"message = \"I'm sorry you are feeling frustrated. Let me transfer you to a live agent.\"\n\nmsg.payload = \n{ \n    \"convo\": {\n        \"output\":{\n            \"text\": message\n        }\n    },\n    \"ml_output\": false\n};\n                \nreturn msg;","outputs":1,"noerr":0,"x":595.0000381469727,"y":190.00000286102295,"wires":[["14fcb9b4.b49566"]]},{"id":"62d69c2f.d27f84","type":"twilio out","z":"854e52d5.43a11","service":"_ext_","twilio":"23989e9f.4ef892","from":"","number":"+15555555555","name":"Send Pass Via Txt Message","x":1618,"y":488,"wires":[]},{"id":"318b87f9.c80da8","type":"function","z":"854e52d5.43a11","name":"Prep Text Message","func":"today = new Date();\nnextweek = new Date(today.getFullYear(), today.getMonth(), today.getDate()+7);\nnextweek_str = nextweek.toDateString();\n\nf_class = global.get(\"fitness_class_rec\") || \"the fitness class\";\n\nmsg.payload = \"Thanks for signing up for \" + f_class + \n\" at Fitness Club USA! The first class is \" + nextweek_str + \" at 6pm. This message is your pass to get in!\";\n\nreturn msg;","outputs":1,"noerr":0,"x":1375,"y":487,"wires":[["62d69c2f.d27f84"]]},{"id":"23989e9f.4ef892","type":"twilio-api","z":"","sid":"ENTER_YOUR_SID_HERE","from":"ENTER_YOUR_TWILIO_PHONE_#_HERE","name":"Fitness Club USA"}]
